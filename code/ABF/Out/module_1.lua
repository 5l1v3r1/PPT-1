local matrix = require 'matrix.matrix'

local Prob = require 'probabilities' --TODO: Make sure to provide the file 'probabilities.lua' externally

local A = matrix{
  { 1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --CNDF:0:[/ENTRY/]
  { -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --CNDF:1:[label %0]
  { 0, -(1-Prob.T_103_9), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --CNDF:2:[label %5]
  { 0, -Prob.T_103_9, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --CNDF:3:[label %8]
  { 0, 0, -1, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --CNDF:4:[label %9]
  { 0, 0, 0, 0, -(1-Prob.T_139_9), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --CNDF:5:[label %89]
  { 0, 0, 0, 0, -Prob.T_139_9, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --CNDF:6:[label %94]
  { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, }, --BlkSchlsEqEuroNoDiv:0:[/ENTRY/]
  { 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --BlkSchlsEqEuroNoDiv:1:[label %0]
  { 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --BlkSchlsEqEuroNoDiv:2:[label %0.1]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --BlkSchlsEqEuroNoDiv:3:[label %0.2]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --BlkSchlsEqEuroNoDiv:4:[label %0.3]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --BlkSchlsEqEuroNoDiv:5:[label %0.4]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -(1-Prob.T_209_9), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --BlkSchlsEqEuroNoDiv:6:[label %67]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -Prob.T_209_9, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --BlkSchlsEqEuroNoDiv:7:[label %75]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --BlkSchlsEqEuroNoDiv:8:[label %91]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:0:[/ENTRY/]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:1:[label %0]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -(1-Prob.T_337_8), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:2:[label %8]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -Prob.T_337_8, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:3:[label %13]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -(1-Prob.T_348_8), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:4:[label %28]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -Prob.T_348_8, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:5:[label %31]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -(1-Prob.T_353_8), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:6:[label %36]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -Prob.T_353_8, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:7:[label %41]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -(1-Prob.T_358_8), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:8:[label %45]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -Prob.T_358_8, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:9:[label %48]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -(1-Prob.T_364_8), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:10:[label %51]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -Prob.T_364_8, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:11:[label %53]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:12:[label %64]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -(1-Prob.T_373_11), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:13:[label %68]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -(1-Prob.T_376_12), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:14:[label %118]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -Prob.T_376_12, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:15:[label %123]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:16:[label %124]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -Prob.T_373_11, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:17:[label %127]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -(1-Prob.T_383_8), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:18:[label %132]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -Prob.T_383_8, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:19:[label %135]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:20:[label %178]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -(1-Prob.T_407_10), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:21:[label %182]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:22:[label %246]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -Prob.T_407_10, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:23:[label %249]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:24:[label %249.1]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:25:[label %249.2]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -(1-Prob.T_474_8), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:26:[label %260]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -Prob.T_474_8, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:27:[label %263]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -(1-Prob.T_479_8), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:28:[label %269]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -Prob.T_479_8, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:29:[label %274]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:30:[label %275]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -(1-Prob.T_484_9), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:31:[label %279]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -(1-Prob.T_486_10), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:32:[label %290]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -Prob.T_486_10, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:33:[label %295]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:34:[label %296]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -Prob.T_484_9, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:35:[label %299]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -(1-Prob.T_493_8), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:36:[label %304]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -Prob.T_493_8, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --main:37:[label %307]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --bs_thread:0:[/ENTRY/]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, --bs_thread:1:[label %0]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, -1, 0, }, --bs_thread:2:[label %15]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -(1-Prob.T_285_10), 1, 0, 0, 0, 0, 0, 0, 0, 0, }, --bs_thread:3:[label %18]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, -1, 0, 0, 0, }, --bs_thread:4:[label %20]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -(1-Prob.T_290_14), 1, 0, 0, 0, 0, 0, 0, }, --bs_thread:5:[label %24]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, }, --bs_thread:6:[label %24.1]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, }, --bs_thread:7:[label %24.2]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, }, --bs_thread:8:[label %61]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -Prob.T_290_14, 0, 0, 0, 0, 1, 0, 0, }, --bs_thread:9:[label %64]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, }, --bs_thread:10:[label %65]
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -Prob.T_285_10, 0, 0, 0, 0, 0, 0, 0, 0, 1, }, --bs_thread:11:[label %68]
}

local b = matrix{
  {0}, --CNDF:0:[/ENTRY/]
  {0}, --CNDF:1:[label %0]
  {0}, --CNDF:2:[label %5]
  {0}, --CNDF:3:[label %8]
  {0}, --CNDF:4:[label %9]
  {0}, --CNDF:5:[label %89]
  {0}, --CNDF:6:[label %94]
  {0}, --BlkSchlsEqEuroNoDiv:0:[/ENTRY/]
  {0}, --BlkSchlsEqEuroNoDiv:1:[label %0]
  {0}, --BlkSchlsEqEuroNoDiv:2:[label %0.1]
  {0}, --BlkSchlsEqEuroNoDiv:3:[label %0.2]
  {0}, --BlkSchlsEqEuroNoDiv:4:[label %0.3]
  {0}, --BlkSchlsEqEuroNoDiv:5:[label %0.4]
  {0}, --BlkSchlsEqEuroNoDiv:6:[label %67]
  {0}, --BlkSchlsEqEuroNoDiv:7:[label %75]
  {0}, --BlkSchlsEqEuroNoDiv:8:[label %91]
  {1}, --main:0:[/ENTRY/]
  {0}, --main:1:[label %0]
  {0}, --main:2:[label %8]
  {0}, --main:3:[label %13]
  {0}, --main:4:[label %28]
  {0}, --main:5:[label %31]
  {0}, --main:6:[label %36]
  {0}, --main:7:[label %41]
  {0}, --main:8:[label %45]
  {0}, --main:9:[label %48]
  {0}, --main:10:[label %51]
  {0}, --main:11:[label %53]
  {0}, --main:12:[label %64]
  {0}, --main:13:[label %68]
  {0}, --main:14:[label %118]
  {0}, --main:15:[label %123]
  {0}, --main:16:[label %124]
  {0}, --main:17:[label %127]
  {0}, --main:18:[label %132]
  {0}, --main:19:[label %135]
  {0}, --main:20:[label %178]
  {0}, --main:21:[label %182]
  {0}, --main:22:[label %246]
  {0}, --main:23:[label %249]
  {0}, --main:24:[label %249.1]
  {0}, --main:25:[label %249.2]
  {0}, --main:26:[label %260]
  {0}, --main:27:[label %263]
  {0}, --main:28:[label %269]
  {0}, --main:29:[label %274]
  {0}, --main:30:[label %275]
  {0}, --main:31:[label %279]
  {0}, --main:32:[label %290]
  {0}, --main:33:[label %295]
  {0}, --main:34:[label %296]
  {0}, --main:35:[label %299]
  {0}, --main:36:[label %304]
  {0}, --main:37:[label %307]
  {0}, --bs_thread:0:[/ENTRY/]
  {0}, --bs_thread:1:[label %0]
  {0}, --bs_thread:2:[label %15]
  {0}, --bs_thread:3:[label %18]
  {0}, --bs_thread:4:[label %20]
  {0}, --bs_thread:5:[label %24]
  {0}, --bs_thread:6:[label %24.1]
  {0}, --bs_thread:7:[label %24.2]
  {0}, --bs_thread:8:[label %61]
  {0}, --bs_thread:9:[label %64]
  {0}, --bs_thread:10:[label %65]
  {0}, --bs_thread:11:[label %68]
}

local blockName = {
  'CNDF:0:[/ENTRY/]',
  'CNDF:1:[label %0]',
  'CNDF:2:[label %5]',
  'CNDF:3:[label %8]',
  'CNDF:4:[label %9]',
  'CNDF:5:[label %89]',
  'CNDF:6:[label %94]',
  'BlkSchlsEqEuroNoDiv:0:[/ENTRY/]',
  'BlkSchlsEqEuroNoDiv:1:[label %0]',
  'BlkSchlsEqEuroNoDiv:2:[label %0.1]',
  'BlkSchlsEqEuroNoDiv:3:[label %0.2]',
  'BlkSchlsEqEuroNoDiv:4:[label %0.3]',
  'BlkSchlsEqEuroNoDiv:5:[label %0.4]',
  'BlkSchlsEqEuroNoDiv:6:[label %67]',
  'BlkSchlsEqEuroNoDiv:7:[label %75]',
  'BlkSchlsEqEuroNoDiv:8:[label %91]',
  'main:0:[/ENTRY/]',
  'main:1:[label %0]',
  'main:2:[label %8]',
  'main:3:[label %13]',
  'main:4:[label %28]',
  'main:5:[label %31]',
  'main:6:[label %36]',
  'main:7:[label %41]',
  'main:8:[label %45]',
  'main:9:[label %48]',
  'main:10:[label %51]',
  'main:11:[label %53]',
  'main:12:[label %64]',
  'main:13:[label %68]',
  'main:14:[label %118]',
  'main:15:[label %123]',
  'main:16:[label %124]',
  'main:17:[label %127]',
  'main:18:[label %132]',
  'main:19:[label %135]',
  'main:20:[label %178]',
  'main:21:[label %182]',
  'main:22:[label %246]',
  'main:23:[label %249]',
  'main:24:[label %249.1]',
  'main:25:[label %249.2]',
  'main:26:[label %260]',
  'main:27:[label %263]',
  'main:28:[label %269]',
  'main:29:[label %274]',
  'main:30:[label %275]',
  'main:31:[label %279]',
  'main:32:[label %290]',
  'main:33:[label %295]',
  'main:34:[label %296]',
  'main:35:[label %299]',
  'main:36:[label %304]',
  'main:37:[label %307]',
  'bs_thread:0:[/ENTRY/]',
  'bs_thread:1:[label %0]',
  'bs_thread:2:[label %15]',
  'bs_thread:3:[label %18]',
  'bs_thread:4:[label %20]',
  'bs_thread:5:[label %24]',
  'bs_thread:6:[label %24.1]',
  'bs_thread:7:[label %24.2]',
  'bs_thread:8:[label %61]',
  'bs_thread:9:[label %64]',
  'bs_thread:10:[label %65]',
  'bs_thread:11:[label %68]',
}

local instCounts = {
  0,
  20,
  5,
  2,
  102,
  6,
  2,
  0,
  95,
  2,
  3,
  2,
  14,
  9,
  19,
  2,
  0,
  18,
  4,
  17,
  2,
  5,
  3,
  4,
  3,
  3,
  1,
  12,
  4,
  50,
  3,
  1,
  4,
  5,
  2,
  48,
  4,
  70,
  4,
  6,
  2,
  5,
  2,
  6,
  3,
  2,
  4,
  11,
  3,
  1,
  4,
  5,
  2,
  5,
  0,
  27,
  3,
  3,
  4,
  31,
  2,
  8,
  4,
  1,
  4,
  1,
}

local N =  A^-1 * b

local N_tot = 0
for i=1,#N do
	if (not blockName[i]:match('/ENTRY/')) then N_tot = N_tot + tonumber(N[i][1]) end
end
print('Module: ../blackscholes.llvm')
print('Solution:')
local PBB = {}
for i=1,#N do
	if (not blockName[i]:match('/ENTRY/')) then PBB[i] = tonumber(N[i][1])/N_tot; print('N_' .. blockName[i] .. ' = ' .. tonumber(N[i][1]) .. ' (' .. PBB[i] .. ')'); else PBB[i] = 0; end
end

local ops = {}
ops[1] = {'TOTAL', 20 * N[2][1] + 5 * N[3][1] + 2 * N[4][1] + 102 * N[5][1] + 6 * N[6][1] + 2 * N[7][1] + 95 * N[9][1] + 2 * N[10][1] + 3 * N[11][1] + 2 * N[12][1] + 14 * N[13][1] + 9 * N[14][1] + 19 * N[15][1] + 2 * N[16][1] + 27 * N[56][1] + 3 * N[57][1] + 3 * N[58][1] + 4 * N[59][1] + 31 * N[60][1] + 2 * N[61][1] + 8 * N[62][1] + 4 * N[63][1] + 1 * N[64][1] + 4 * N[65][1] + 1 * N[66][1] + 18 * N[18][1] + 4 * N[19][1] + 17 * N[20][1] + 2 * N[21][1] + 5 * N[22][1] + 3 * N[23][1] + 4 * N[24][1] + 3 * N[25][1] + 3 * N[26][1] + 1 * N[27][1] + 12 * N[28][1] + 4 * N[29][1] + 50 * N[30][1] + 3 * N[31][1] + 1 * N[32][1] + 4 * N[33][1] + 5 * N[34][1] + 2 * N[35][1] + 48 * N[36][1] + 4 * N[37][1] + 70 * N[38][1] + 4 * N[39][1] + 6 * N[40][1] + 2 * N[41][1] + 5 * N[42][1] + 2 * N[43][1] + 6 * N[44][1] + 3 * N[45][1] + 2 * N[46][1] + 4 * N[47][1] + 11 * N[48][1] + 3 * N[49][1] + 1 * N[50][1] + 4 * N[51][1] + 5 * N[52][1] + 2 * N[53][1] + 5 * N[54][1]}
ops[2] = {'add', 1 * N[56][1] + 1 * N[63][1] + 1 * N[65][1] + 1 * N[33][1] + 4 * N[36][1] + 1 * N[39][1] + 1 * N[51][1]}
ops[3] = {'alloca:1:i32', 15 * N[2][1] + 27 * N[9][1] + 8 * N[56][1] + 12 * N[18][1]}
ops[4] = {'and', 2 * N[36][1]}
ops[5] = {'bitcast:1:%struct.OptionData_*', 1 * N[54][1]}
ops[6] = {'bitcast:1:float*', 1 * N[54][1]}
ops[7] = {'bitcast:1:i32*', 1 * N[40][1]}
ops[8] = {'bitcast:1:i8*', 1 * N[56][1] + 2 * N[28][1] + 2 * N[36][1]}
ops[9] = {'br:cond', 1 * N[2][1] + 1 * N[5][1] + 1 * N[13][1] + 1 * N[57][1] + 1 * N[59][1] + 1 * N[18][1] + 1 * N[20][1] + 1 * N[22][1] + 1 * N[24][1] + 1 * N[26][1] + 1 * N[29][1] + 1 * N[30][1] + 1 * N[34][1] + 1 * N[37][1] + 1 * N[42][1] + 1 * N[44][1] + 1 * N[47][1] + 1 * N[48][1] + 1 * N[52][1]}
ops[10] = {'br:uncond', 1 * N[3][1] + 1 * N[4][1] + 1 * N[6][1] + 1 * N[9][1] + 1 * N[10][1] + 1 * N[11][1] + 1 * N[12][1] + 1 * N[14][1] + 1 * N[15][1] + 1 * N[56][1] + 1 * N[58][1] + 1 * N[60][1] + 1 * N[61][1] + 1 * N[62][1] + 1 * N[63][1] + 1 * N[64][1] + 1 * N[65][1] + 1 * N[25][1] + 1 * N[28][1] + 1 * N[32][1] + 1 * N[33][1] + 1 * N[36][1] + 1 * N[38][1] + 1 * N[39][1] + 1 * N[40][1] + 1 * N[41][1] + 1 * N[46][1] + 1 * N[50][1] + 1 * N[51][1]}
ops[11] = {'call', 1 * N[10][1] + 1 * N[12][1] + 1 * N[61][1] + 1 * N[41][1]}
ops[12] = {'fadd', 5 * N[5][1] + 2 * N[9][1]}
ops[13] = {'fcmp', 1 * N[2][1]}
ops[14] = {'fdiv', 1 * N[5][1] + 2 * N[9][1]}
ops[15] = {'fmul', 14 * N[5][1] + 4 * N[9][1] + 2 * N[13][1] + 2 * N[14][1] + 2 * N[15][1]}
ops[16] = {'fpext:1:float', 1 * N[2][1] + 11 * N[5][1] + 1 * N[6][1] + 3 * N[9][1] + 2 * N[13][1] + 2 * N[15][1] + 1 * N[48][1]}
ops[17] = {'fptrunc:1:double', 11 * N[5][1] + 1 * N[6][1] + 3 * N[9][1] + 1 * N[13][1] + 2 * N[15][1]}
ops[18] = {'fsub', 1 * N[3][1] + 1 * N[5][1] + 1 * N[6][1] + 1 * N[9][1] + 1 * N[13][1] + 1 * N[14][1] + 3 * N[15][1]}
ops[19] = {'getelementptr', 6 * N[60][1] + 1 * N[62][1] + 1 * N[19][1] + 3 * N[20][1] + 18 * N[30][1] + 4 * N[36][1] + 18 * N[38][1] + 1 * N[48][1]}
ops[20] = {'icmp', 1 * N[5][1] + 1 * N[13][1] + 1 * N[57][1] + 1 * N[59][1] + 1 * N[18][1] + 1 * N[20][1] + 1 * N[22][1] + 1 * N[24][1] + 1 * N[26][1] + 1 * N[29][1] + 1 * N[30][1] + 1 * N[34][1] + 1 * N[37][1] + 1 * N[38][1] + 1 * N[42][1] + 1 * N[44][1] + 1 * N[47][1] + 1 * N[48][1] + 1 * N[52][1]}
ops[21] = {'inttoptr:1:i64', 2 * N[36][1]}
ops[22] = {'load:1:%struct.OptionData_**', 9 * N[30][1] + 6 * N[38][1] + 1 * N[54][1]}
ops[23] = {'load:1:%struct.__sFILE**', 1 * N[20][1] + 1 * N[22][1] + 1 * N[23][1] + 1 * N[30][1] + 1 * N[31][1] + 1 * N[34][1] + 1 * N[42][1] + 1 * N[44][1] + 1 * N[45][1] + 1 * N[48][1] + 1 * N[49][1] + 1 * N[52][1]}
ops[24] = {'load:1:float*', 1 * N[2][1] + 1 * N[3][1] + 33 * N[5][1] + 1 * N[6][1] + 1 * N[7][1] + 27 * N[9][1] + 1 * N[11][1] + 3 * N[13][1] + 4 * N[14][1] + 6 * N[15][1] + 1 * N[16][1] + 5 * N[60][1] + 1 * N[62][1] + 5 * N[38][1] + 1 * N[48][1]}
ops[25] = {'load:1:float**', 5 * N[60][1] + 1 * N[62][1] + 5 * N[36][1] + 5 * N[38][1] + 1 * N[48][1] + 1 * N[54][1]}
ops[26] = {'load:1:i32*', 1 * N[5][1] + 1 * N[13][1] + 7 * N[56][1] + 1 * N[57][1] + 1 * N[58][1] + 2 * N[59][1] + 7 * N[60][1] + 1 * N[62][1] + 1 * N[63][1] + 1 * N[65][1] + 1 * N[18][1] + 1 * N[22][1] + 2 * N[24][1] + 1 * N[25][1] + 1 * N[26][1] + 2 * N[28][1] + 2 * N[29][1] + 10 * N[30][1] + 1 * N[33][1] + 1 * N[34][1] + 7 * N[36][1] + 2 * N[37][1] + 12 * N[38][1] + 1 * N[39][1] + 1 * N[40][1] + 2 * N[44][1] + 2 * N[47][1] + 2 * N[48][1] + 1 * N[51][1] + 1 * N[52][1]}
ops[27] = {'load:1:i32**', 1 * N[60][1] + 1 * N[36][1] + 1 * N[38][1]}
ops[28] = {'load:1:i8*', 1 * N[38][1]}
ops[29] = {'load:1:i8**', 1 * N[56][1] + 1 * N[19][1] + 4 * N[20][1] + 1 * N[21][1] + 1 * N[23][1] + 1 * N[31][1] + 1 * N[35][1] + 1 * N[42][1] + 1 * N[43][1] + 1 * N[45][1] + 1 * N[49][1] + 1 * N[53][1]}
ops[30] = {'load:1:i8***', 1 * N[19][1] + 3 * N[20][1]}
ops[31] = {'mul', 1 * N[56][1] + 2 * N[28][1] + 3 * N[36][1] + 1 * N[40][1]}
ops[32] = {'ptrtoint:1:float*', 1 * N[36][1]}
ops[33] = {'ptrtoint:1:i32*', 1 * N[36][1]}
ops[34] = {'ret:1:float', 1 * N[7][1] + 1 * N[16][1]}
ops[35] = {'ret:1:i32', 1 * N[66][1] + 1 * N[54][1]}
ops[36] = {'sdiv', 2 * N[56][1]}
ops[37] = {'select', 1 * N[38][1]}
ops[38] = {'sext:1:i32', 6 * N[60][1] + 1 * N[62][1] + 2 * N[28][1] + 9 * N[30][1] + 6 * N[36][1] + 12 * N[38][1] + 1 * N[40][1] + 1 * N[48][1]}
ops[39] = {'sext:1:i8', 1 * N[38][1]}
ops[40] = {'store', 1 * N[2][1] + 2 * N[3][1] + 1 * N[4][1] + 23 * N[5][1] + 1 * N[6][1] + 25 * N[9][1] + 1 * N[11][1] + 2 * N[13][1] + 1 * N[14][1] + 3 * N[15][1] + 5 * N[56][1] + 1 * N[58][1] + 2 * N[62][1] + 1 * N[63][1] + 1 * N[65][1] + 3 * N[18][1] + 4 * N[20][1] + 1 * N[22][1] + 1 * N[25][1] + 3 * N[28][1] + 1 * N[30][1] + 1 * N[33][1] + 1 * N[34][1] + 9 * N[36][1] + 6 * N[38][1] + 1 * N[39][1] + 1 * N[40][1] + 1 * N[42][1] + 1 * N[44][1] + 1 * N[46][1] + 1 * N[48][1] + 1 * N[51][1] + 1 * N[52][1]}
ops[41] = {'unreachable', 1 * N[19][1] + 1 * N[21][1] + 1 * N[23][1] + 1 * N[27][1] + 1 * N[31][1] + 1 * N[35][1] + 1 * N[43][1] + 1 * N[45][1] + 1 * N[49][1] + 1 * N[53][1]}

print('\n\nDYNAMIC OP COUNTS FOR THIS INSTANCE:')

for _,val in pairs(ops) do print(val[1] .. ' : ' .. val[2]) end

P = {}
for i=1,#A do P[i] = {} end
for i=1,#A do
    for j=1,#A[i] do
        if (A[i][j] < 0) then
            P[j][i] = -A[i][j]
        else
            P[j][i] = 0
        end
    end
end
io.write("\n\nP =\n")
for i=1,#P do
    io.write(blockName[i], " : ")
    for j=1,#P[i] do
        io.write(P[i][j], " ")
    end
    io.write("\n")
end

function string:split(pat)
    local t = {}
    local fpat = "(.-)" .. pat
    local last_end = 1
    local s, e, cap = self:find(fpat, 1)
    while s do
        if s ~= 1 or cap ~= "" then
            table.insert(t,cap)
        end
        last_end = e+1
        s, e, cap = self:find(fpat, last_end)
    end
    if last_end <= #self then
        cap = self:sub(last_end)
        table.insert(t, cap)
    end
    return t
end

function string:strip()
    local from = self:match"^%s*()"
    return from > #self and "" or self:match(".*%S", from)
end

--Generate CFG
local fp = io.open("cfg.dot", "w")
fp:write("digraph PDG {\n\n\trankdir=TB;\n\tnode [style=filled];\n\tsize=\"10x10\";\n\n")
local funName=""
local funCount=1
for i=1,#blockName do --Nodes
    local thisFun = blockName[i]:split(":")[1]
    if thisFun ~= funName then
        if funName ~= "" then
            fp:write("\t}\n\n")
        end
        funName = thisFun
        fp:write("\tsubgraph cluster_", funCount, " {\n")
        fp:write("\t\tlabel=\"", funName, "\";\n")
        funCount = funCount + 1
    end

    local sumProb=0.0
    for j=1,#P[i] do
        sumProb = sumProb + P[i][j]
    end
    if sumProb <= 0.0 then
        fp:write("\t\tBB", i, "\t[fillcolor=\"#FF0000\", label=\"", blockName[i], "\\n", N[i][1], ", ", PBB[i], "\\n", instCounts[i], "\\nRET\"];\n")
    else
        if blockName[i]:match("/ENTRY/") then
            fp:write("\t\tBB", i, "\t[fillcolor=\"#0000FF\", label=\"", blockName[i], "\"];\n")
        elseif PBB[i] <= 0.0 then
            fp:write("\t\tBB", i, "\t[fillcolor=\"#FF0000\", label=\"", blockName[i], "\\n", N[i][1], ", ", PBB[i], "\\n", instCounts[i], "\"];\n")
        else
            fp:write("\t\tBB", i, "\t[fillcolor=\"#FFEFD5\", label=\"", blockName[i], "\\n", N[i][1], ", ", PBB[i], "\\n", instCounts[i], "\"];\n")
        end
    end
end
fp:write("\t}\n\n")
for i=1,#P do
    for j=1,#P[i] do --Edges
        if (P[i][j] > 0) then
            fp:write("\tBB", i, " -> ", "BB", j, "\t[color=\"#00FF00\", label=\"", P[i][j], "\"];\n")
        end
    end
end
fp:write("\n}\n")
