; ModuleID = 'simple.c'
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.11.0"

@main.A = internal global [1001 x i64] zeroinitializer, align 16
@main.B = internal global [1001 x i64] zeroinitializer, align 16
@main.C = internal global [1001 x i64] zeroinitializer, align 16
@.str = private unnamed_addr constant [5 x i8] c"%ld\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define i64 @sum(i64* %A, i64* %B, i64* %C, i64 %count) #0 {
  %1 = alloca i64*, align 8
  %2 = alloca i64*, align 8
  %3 = alloca i64*, align 8
  %4 = alloca i64, align 8
  %i = alloca i64, align 8
  %j = alloca i64, align 8
  %sum = alloca i64, align 8
  store i64* %A, i64** %1, align 8
  store i64* %B, i64** %2, align 8
  store i64* %C, i64** %3, align 8
  store i64 %count, i64* %4, align 8
  store i64 0, i64* %sum, align 8
  store i64 0, i64* %i, align 8
  br label %5

; <label>:5                                       ; preds = %48, %0
  %6 = load i64* %i, align 8
  %7 = load i64* %4, align 8
  %8 = icmp slt i64 %6, %7
  br i1 %8, label %9, label %51

; <label>:9                                       ; preds = %5
  %10 = load i64* %i, align 8
  %11 = load i64** %1, align 8
  %12 = getelementptr inbounds i64* %11, i64 %10
  %13 = load i64* %12, align 8
  %14 = load i64* %i, align 8
  %15 = add nsw i64 %14, 1
  %16 = load i64** %1, align 8
  %17 = getelementptr inbounds i64* %16, i64 %15
  %18 = load i64* %17, align 8
  %19 = mul nsw i64 %13, %18
  %20 = load i64* %sum, align 8
  %21 = add nsw i64 %20, %19
  store i64 %21, i64* %sum, align 8
  %22 = load i64* %i, align 8
  %23 = load i64** %2, align 8
  %24 = getelementptr inbounds i64* %23, i64 %22
  %25 = load i64* %24, align 8
  %26 = load i64* %i, align 8
  %27 = load i64** %1, align 8
  %28 = getelementptr inbounds i64* %27, i64 %26
  %29 = load i64* %28, align 8
  %30 = add nsw i64 %25, %29
  %31 = load i64* %i, align 8
  %32 = load i64** %3, align 8
  %33 = getelementptr inbounds i64* %32, i64 %31
  store i64 %30, i64* %33, align 8
  store i64 0, i64* %j, align 8
  br label %34

; <label>:34                                      ; preds = %44, %9
  %35 = load i64* %j, align 8
  %36 = load i64* %4, align 8
  %37 = icmp slt i64 %35, %36
  br i1 %37, label %38, label %47

; <label>:38                                      ; preds = %34
  %39 = load i64* %i, align 8
  %40 = load i64* %j, align 8
  %41 = mul nsw i64 %39, %40
  %42 = load i64* %sum, align 8
  %43 = add nsw i64 %42, %41
  store i64 %43, i64* %sum, align 8
  br label %44

; <label>:44                                      ; preds = %38
  %45 = load i64* %j, align 8
  %46 = add nsw i64 %45, 1
  store i64 %46, i64* %j, align 8
  br label %34

; <label>:47                                      ; preds = %34
  br label %48

; <label>:48                                      ; preds = %47
  %49 = load i64* %i, align 8
  %50 = add nsw i64 %49, 1
  store i64 %50, i64* %i, align 8
  br label %5

; <label>:51                                      ; preds = %5
  %52 = load i64* %sum, align 8
  ret i64 %52
}

; Function Attrs: nounwind ssp uwtable
define i32 @main() #0 {
  %1 = alloca i32, align 4
  %i = alloca i64, align 8
  store i32 0, i32* %1
  store i64 0, i64* %i, align 8
  br label %2

; <label>:2                                       ; preds = %8, %0
  %3 = load i64* %i, align 8
  %4 = icmp slt i64 %3, 1001
  br i1 %4, label %5, label %11

; <label>:5                                       ; preds = %2
  %6 = load i64* %i, align 8
  %7 = getelementptr inbounds [1001 x i64]* @main.A, i32 0, i64 %6
  store i64 20, i64* %7, align 8
  br label %8

; <label>:8                                       ; preds = %5
  %9 = load i64* %i, align 8
  %10 = add nsw i64 %9, 1
  store i64 %10, i64* %i, align 8
  br label %2

; <label>:11                                      ; preds = %2
  %12 = call i64 @sum(i64* getelementptr inbounds ([1001 x i64]* @main.A, i32 0, i32 0), i64* getelementptr inbounds ([1001 x i64]* @main.B, i32 0, i32 0), i64* getelementptr inbounds ([1001 x i64]* @main.C, i32 0, i32 0), i64 1000)
  %13 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str, i32 0, i32 0), i64 %12)
  %14 = load i32* %1
  ret i32 %14
}

declare i32 @printf(i8*, ...) #1

attributes #0 = { nounwind ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5.2 (tags/RELEASE_352/final)"}
