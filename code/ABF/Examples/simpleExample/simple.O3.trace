Module : simpleExample2/simple.O3.llvm
	TargetTriple :
		x86_64-apple-macosx10.11.0

	Function <@ 0x7fbbdbc045a0> : main : Definition : NonIntrinsic
		ArgList :

		BasicBlock <@ 0x7fbbdbc046e0> : overflow.checked
			Instruction <@ 0x7fbbdbc04ec0> : (8, 9) : call
				metadata : metadata <badref><@ 0x7fbbdbc0c330>
				i64 : i64 0<@ 0x7fbbdbc04bb0>
				metadata : metadata <badref><@ 0x7fbbdbc0d940>
				void (metadata, i64, metadata)* : llvm.dbg.value<@ 0x7fbbdbc04cb0>
			Instruction <@ 0x7fbbdbc049e0> : (12, 14) : call
				metadata : metadata <badref><@ 0x7fbbdbc0c4a0>
				i64 : i64 0<@ 0x7fbbdbc04bb0>
				metadata : metadata <badref><@ 0x7fbbdbc0f1a0>
				void (metadata, i64, metadata)* : llvm.dbg.value<@ 0x7fbbdbc04cb0>
			Instruction <@ 0x7fbbdbc05050> : (12, 23) : call
				metadata : metadata <badref><@ 0x7fbbdbc0c330>
				i64 : i64 0<@ 0x7fbbdbc04bb0>
				metadata : metadata <badref><@ 0x7fbbdbc0f460>
				void (metadata, i64, metadata)* : llvm.dbg.value<@ 0x7fbbdbc04cb0>
			Instruction <@ 0x7fbbdbc051f0> : (13, 13) : call
				metadata : metadata <badref><@ 0x7fbbdbc04f60>
				i64 : i64 0<@ 0x7fbbdbc04bb0>
				metadata : metadata <badref><@ 0x7fbbdbc0f660>
				void (metadata, i64, metadata)* : llvm.dbg.value<@ 0x7fbbdbc04cb0>
			Instruction <@ 0x7fbbdbc05348> : (0, 0) : br
				label : vector.body<@ 0x7fbbdbc05290>

		BasicBlock <@ 0x7fbbdbc05290> : vector.body
			Instruction <@ 0x7fbbdbc05400> : (9, 11) : phi
				i64 : i64 0<@ 0x7fbbdbc04bb0>
				i64 : index.next.1<@ 0x7fbbdbc06e00>
			Instruction <@ 0x7fbbdbc05588> : (9, 11) : insertelement
				<2 x i64> : <2 x i64> undef<@ 0x7fbbdbc054d0>
				i64 : index<@ 0x7fbbdbc05400>
				i32 : i32 0<@ 0x7fbbdbc05500>
			Instruction <@ 0x7fbbdbc05698> : (9, 11) : shufflevector
				<2 x i64> : broadcast.splatinsert<@ 0x7fbbdbc05588>
				<2 x i64> : <2 x i64> undef<@ 0x7fbbdbc054d0>
				<2 x i32> : <2 x i32> zeroinitializer<@ 0x7fbbdbc05620>
			Instruction <@ 0x7fbbdbc058d0> : (9, 11) : add
				<2 x i64> : broadcast.splat<@ 0x7fbbdbc05698>
				<2 x i64> : <2 x i64> <i64 0, i64 1><@ 0x7fbbdbc05860>
			Instruction <@ 0x7fbbdbc05a70> : (9, 11) : add
				<2 x i64> : broadcast.splat<@ 0x7fbbdbc05698>
				<2 x i64> : <2 x i64> <i64 2, i64 3><@ 0x7fbbdbc05a00>
			Instruction <@ 0x7fbbdbc05b90> : (13, 31) : shl
				<2 x i64> : induction<@ 0x7fbbdbc058d0>
				<2 x i64> : <2 x i64> <i64 1, i64 1><@ 0x7fbbdbc05b20>
			Instruction <@ 0x7fbbdbc05c30> : (13, 31) : shl
				<2 x i64> : induction1<@ 0x7fbbdbc05a70>
				<2 x i64> : <2 x i64> <i64 1, i64 1><@ 0x7fbbdbc05b20>
			Instruction <@ 0x7fbbdbc05ce8> : (13, 31) : getelementptr
				[1000 x i32]* : main.A<@ 0x7fbbdbc04438>
				i64 : i64 0<@ 0x7fbbdbc04bb0>
				i64 : index<@ 0x7fbbdbc05400>
			Instruction <@ 0x7fbbdbc05d78> : (13, 31) : trunc
				<2 x i64> : <2 x i64> %0<@ 0x7fbbdbc05b90>
			Instruction <@ 0x7fbbdbc05de8> : (13, 31) : trunc
				<2 x i64> : <2 x i64> %1<@ 0x7fbbdbc05c30>
			Instruction <@ 0x7fbbdbc05ea8> : (13, 31) : bitcast
				i32* : i32* %2<@ 0x7fbbdbc05ce8>
			Instruction <@ 0x7fbbdbc05f40> : (13, 31) : store
				<2 x i32> : <2 x i32> %3<@ 0x7fbbdbc05d78>
				<2 x i32>* : <2 x i32>* %5<@ 0x7fbbdbc05ea8>
			Instruction <@ 0x7fbbdbc05fd0> : (13, 31) : or
				i64 : index<@ 0x7fbbdbc05400>
				i64 : i64 2<@ 0x7fbbdbc05950>
			Instruction <@ 0x7fbbdbc06088> : (13, 31) : getelementptr
				[1000 x i32]* : main.A<@ 0x7fbbdbc04438>
				i64 : i64 0<@ 0x7fbbdbc04bb0>
				i64 : .sum2<@ 0x7fbbdbc05fd0>
			Instruction <@ 0x7fbbdbc06108> : (13, 31) : bitcast
				i32* : i32* %6<@ 0x7fbbdbc06088>
			Instruction <@ 0x7fbbdbc061a0> : (13, 31) : store
				<2 x i32> : <2 x i32> %4<@ 0x7fbbdbc05de8>
				<2 x i32>* : <2 x i32>* %7<@ 0x7fbbdbc06108>
			Instruction <@ 0x7fbbdbc06290> : (9, 11) : add
				i64 : index<@ 0x7fbbdbc05400>
				i64 : i64 4<@ 0x7fbbdbc06220>
			Instruction <@ 0x7fbbdbc06378> : (9, 11) : insertelement
				<2 x i64> : <2 x i64> undef<@ 0x7fbbdbc054d0>
				i64 : index.next<@ 0x7fbbdbc06290>
				i32 : i32 0<@ 0x7fbbdbc05500>
			Instruction <@ 0x7fbbdbc06488> : (9, 11) : shufflevector
				<2 x i64> : broadcast.splatinsert.1<@ 0x7fbbdbc06378>
				<2 x i64> : <2 x i64> undef<@ 0x7fbbdbc054d0>
				<2 x i32> : <2 x i32> zeroinitializer<@ 0x7fbbdbc05620>
			Instruction <@ 0x7fbbdbc06520> : (9, 11) : add
				<2 x i64> : broadcast.splat.1<@ 0x7fbbdbc06488>
				<2 x i64> : <2 x i64> <i64 0, i64 1><@ 0x7fbbdbc05860>
			Instruction <@ 0x7fbbdbc065d0> : (9, 11) : add
				<2 x i64> : broadcast.splat.1<@ 0x7fbbdbc06488>
				<2 x i64> : <2 x i64> <i64 2, i64 3><@ 0x7fbbdbc05a00>
			Instruction <@ 0x7fbbdbc06810> : (13, 31) : shl
				<2 x i64> : induction.1<@ 0x7fbbdbc06520>
				<2 x i64> : <2 x i64> <i64 1, i64 1><@ 0x7fbbdbc05b20>
			Instruction <@ 0x7fbbdbc04760> : (13, 31) : shl
				<2 x i64> : induction1.1<@ 0x7fbbdbc065d0>
				<2 x i64> : <2 x i64> <i64 1, i64 1><@ 0x7fbbdbc05b20>
			Instruction <@ 0x7fbbdbc06938> : (13, 31) : getelementptr
				[1000 x i32]* : main.A<@ 0x7fbbdbc04438>
				i64 : i64 0<@ 0x7fbbdbc04bb0>
				i64 : index.next<@ 0x7fbbdbc06290>
			Instruction <@ 0x7fbbdbc069a8> : (13, 31) : trunc
				<2 x i64> : <2 x i64> %8<@ 0x7fbbdbc06810>
			Instruction <@ 0x7fbbdbc06a18> : (13, 31) : trunc
				<2 x i64> : <2 x i64> %9<@ 0x7fbbdbc04760>
			Instruction <@ 0x7fbbdbc06a88> : (13, 31) : bitcast
				i32* : i32* %10<@ 0x7fbbdbc06938>
			Instruction <@ 0x7fbbdbc06b10> : (13, 31) : store
				<2 x i32> : <2 x i32> %11<@ 0x7fbbdbc069a8>
				<2 x i32>* : <2 x i32>* %13<@ 0x7fbbdbc06a88>
			Instruction <@ 0x7fbbdbc06bc0> : (13, 31) : or
				i64 : index.next<@ 0x7fbbdbc06290>
				i64 : i64 2<@ 0x7fbbdbc05950>
			Instruction <@ 0x7fbbdbc06c58> : (13, 31) : getelementptr
				[1000 x i32]* : main.A<@ 0x7fbbdbc04438>
				i64 : i64 0<@ 0x7fbbdbc04bb0>
				i64 : .sum2.1<@ 0x7fbbdbc06bc0>
			Instruction <@ 0x7fbbdbc06cc8> : (13, 31) : bitcast
				i32* : i32* %14<@ 0x7fbbdbc06c58>
			Instruction <@ 0x7fbbdbc06d50> : (13, 31) : store
				<2 x i32> : <2 x i32> %12<@ 0x7fbbdbc06a18>
				<2 x i32>* : <2 x i32>* %15<@ 0x7fbbdbc06cc8>
			Instruction <@ 0x7fbbdbc06e00> : (9, 11) : add
				i64 : index.next<@ 0x7fbbdbc06290>
				i64 : i64 4<@ 0x7fbbdbc06220>
			Instruction <@ 0x7fbbdbc06e80> : (9, 11) : icmp
				i64 : index.next.1<@ 0x7fbbdbc06e00>
				i64 : i64 1000<@ 0x7fbbdbc053c0>
			Instruction <@ 0x7fbbdbc070a8> : (9, 11) : br
				i1 : i1 %16<@ 0x7fbbdbc06e80>
				label : vector.body<@ 0x7fbbdbc05290>
				label : .preheader.i.preheader<@ 0x7fbbdbc052e0>

		BasicBlock <@ 0x7fbbdbc052e0> : .preheader.i.preheader
			Instruction <@ 0x7fbbdbc06888> : (10, 1) : ret
				i32 : i32 0<@ 0x7fbbdbc05500>

	Function <@ 0x7fbbdbc06f40> : loop : Definition : NonIntrinsic
		ArgList :
			A<@ 0x7fbbdbc07190>
			sum<@ 0x7fbbdbc071d0>

		BasicBlock <@ 0x7fbbdbc07320> : overflow.checked
			Instruction <@ 0x7fbbdbc07510> : (12, 14) : call
				metadata : metadata !{i32* %A}<@ 0x7fbbdbc073f0>
				i64 : i64 0<@ 0x7fbbdbc04bb0>
				metadata : metadata <badref><@ 0x7fbbdbc0e3c0>
				void (metadata, i64, metadata)* : llvm.dbg.value<@ 0x7fbbdbc04cb0>
			Instruction <@ 0x7fbbdbc07710> : (12, 23) : call
				metadata : metadata !{i32 %sum}<@ 0x7fbbdbc075b0>
				i64 : i64 0<@ 0x7fbbdbc04bb0>
				metadata : metadata <badref><@ 0x7fbbdbc0e500>
				void (metadata, i64, metadata)* : llvm.dbg.value<@ 0x7fbbdbc04cb0>
			Instruction <@ 0x7fbbdbc078b0> : (13, 13) : call
				metadata : metadata <badref><@ 0x7fbbdbc04f60>
				i64 : i64 0<@ 0x7fbbdbc04bb0>
				metadata : metadata <badref><@ 0x7fbbdbc0e640>
				void (metadata, i64, metadata)* : llvm.dbg.value<@ 0x7fbbdbc04cb0>
			Instruction <@ 0x7fbbdbc07a08> : (0, 0) : br
				label : vector.body<@ 0x7fbbdbc07950>

		BasicBlock <@ 0x7fbbdbc07950> : vector.body
			Instruction <@ 0x7fbbdbc07ac0> : (13, 9) : phi
				i64 : i64 0<@ 0x7fbbdbc04bb0>
				i64 : index.next.1<@ 0x7fbbdbc09000>
			Instruction <@ 0x7fbbdbc07bd8> : (0, 0) : insertelement
				<2 x i64> : <2 x i64> undef<@ 0x7fbbdbc054d0>
				i64 : index<@ 0x7fbbdbc07ac0>
				i32 : i32 0<@ 0x7fbbdbc05500>
			Instruction <@ 0x7fbbdbc07ca8> : (0, 0) : shufflevector
				<2 x i64> : broadcast.splatinsert<@ 0x7fbbdbc07bd8>
				<2 x i64> : <2 x i64> undef<@ 0x7fbbdbc054d0>
				<2 x i32> : <2 x i32> zeroinitializer<@ 0x7fbbdbc05620>
			Instruction <@ 0x7fbbdbc07d50> : (0, 0) : add
				<2 x i64> : broadcast.splat<@ 0x7fbbdbc07ca8>
				<2 x i64> : <2 x i64> <i64 0, i64 1><@ 0x7fbbdbc05860>
			Instruction <@ 0x7fbbdbc07df0> : (0, 0) : add
				<2 x i64> : broadcast.splat<@ 0x7fbbdbc07ca8>
				<2 x i64> : <2 x i64> <i64 2, i64 3><@ 0x7fbbdbc05a00>
			Instruction <@ 0x7fbbdbc07e90> : (13, 31) : shl
				<2 x i64> : induction<@ 0x7fbbdbc07d50>
				<2 x i64> : <2 x i64> <i64 1, i64 1><@ 0x7fbbdbc05b20>
			Instruction <@ 0x7fbbdbc07f30> : (13, 31) : shl
				<2 x i64> : induction8<@ 0x7fbbdbc07df0>
				<2 x i64> : <2 x i64> <i64 1, i64 1><@ 0x7fbbdbc05b20>
			Instruction <@ 0x7fbbdbc07fd0> : (13, 31) : getelementptr
				i32* : A<@ 0x7fbbdbc07190>
				i64 : index<@ 0x7fbbdbc07ac0>
			Instruction <@ 0x7fbbdbc08058> : (13, 31) : trunc
				<2 x i64> : <2 x i64> %0<@ 0x7fbbdbc07e90>
			Instruction <@ 0x7fbbdbc080c8> : (13, 31) : trunc
				<2 x i64> : <2 x i64> %1<@ 0x7fbbdbc07f30>
			Instruction <@ 0x7fbbdbc08188> : (13, 31) : bitcast
				i32* : i32* %2<@ 0x7fbbdbc07fd0>
			Instruction <@ 0x7fbbdbc08220> : (13, 31) : store
				<2 x i32> : <2 x i32> %3<@ 0x7fbbdbc08058>
				<2 x i32>* : <2 x i32>* %5<@ 0x7fbbdbc08188>
			Instruction <@ 0x7fbbdbc082b0> : (13, 31) : or
				i64 : index<@ 0x7fbbdbc07ac0>
				i64 : i64 2<@ 0x7fbbdbc05950>
			Instruction <@ 0x7fbbdbc08350> : (13, 31) : getelementptr
				i32* : A<@ 0x7fbbdbc07190>
				i64 : .sum33<@ 0x7fbbdbc082b0>
			Instruction <@ 0x7fbbdbc083c8> : (13, 31) : bitcast
				i32* : i32* %6<@ 0x7fbbdbc08350>
			Instruction <@ 0x7fbbdbc08460> : (13, 31) : store
				<2 x i32> : <2 x i32> %4<@ 0x7fbbdbc080c8>
				<2 x i32>* : <2 x i32>* %7<@ 0x7fbbdbc083c8>
			Instruction <@ 0x7fbbdbc08510> : (13, 9) : add
				i64 : index<@ 0x7fbbdbc07ac0>
				i64 : i64 4<@ 0x7fbbdbc06220>
			Instruction <@ 0x7fbbdbc085f8> : (0, 0) : insertelement
				<2 x i64> : <2 x i64> undef<@ 0x7fbbdbc054d0>
				i64 : index.next<@ 0x7fbbdbc08510>
				i32 : i32 0<@ 0x7fbbdbc05500>
			Instruction <@ 0x7fbbdbc086f8> : (0, 0) : shufflevector
				<2 x i64> : broadcast.splatinsert.1<@ 0x7fbbdbc085f8>
				<2 x i64> : <2 x i64> undef<@ 0x7fbbdbc054d0>
				<2 x i32> : <2 x i32> zeroinitializer<@ 0x7fbbdbc05620>
			Instruction <@ 0x7fbbdbc08910> : (0, 0) : add
				<2 x i64> : broadcast.splat.1<@ 0x7fbbdbc086f8>
				<2 x i64> : <2 x i64> <i64 0, i64 1><@ 0x7fbbdbc05860>
			Instruction <@ 0x7fbbdbc089b0> : (0, 0) : add
				<2 x i64> : broadcast.splat.1<@ 0x7fbbdbc086f8>
				<2 x i64> : <2 x i64> <i64 2, i64 3><@ 0x7fbbdbc05a00>
			Instruction <@ 0x7fbbdbc08a50> : (13, 31) : shl
				<2 x i64> : induction.1<@ 0x7fbbdbc08910>
				<2 x i64> : <2 x i64> <i64 1, i64 1><@ 0x7fbbdbc05b20>
			Instruction <@ 0x7fbbdbc07240> : (13, 31) : shl
				<2 x i64> : induction8.1<@ 0x7fbbdbc089b0>
				<2 x i64> : <2 x i64> <i64 1, i64 1><@ 0x7fbbdbc05b20>
			Instruction <@ 0x7fbbdbc08b60> : (13, 31) : getelementptr
				i32* : A<@ 0x7fbbdbc07190>
				i64 : index.next<@ 0x7fbbdbc08510>
			Instruction <@ 0x7fbbdbc08bc8> : (13, 31) : trunc
				<2 x i64> : <2 x i64> %8<@ 0x7fbbdbc08a50>
			Instruction <@ 0x7fbbdbc08c38> : (13, 31) : trunc
				<2 x i64> : <2 x i64> %9<@ 0x7fbbdbc07240>
			Instruction <@ 0x7fbbdbc08ca8> : (13, 31) : bitcast
				i32* : i32* %10<@ 0x7fbbdbc08b60>
			Instruction <@ 0x7fbbdbc08d30> : (13, 31) : store
				<2 x i32> : <2 x i32> %11<@ 0x7fbbdbc08bc8>
				<2 x i32>* : <2 x i32>* %13<@ 0x7fbbdbc08ca8>
			Instruction <@ 0x7fbbdbc08de0> : (13, 31) : or
				i64 : index.next<@ 0x7fbbdbc08510>
				i64 : i64 2<@ 0x7fbbdbc05950>
			Instruction <@ 0x7fbbdbc08e60> : (13, 31) : getelementptr
				i32* : A<@ 0x7fbbdbc07190>
				i64 : .sum33.1<@ 0x7fbbdbc08de0>
			Instruction <@ 0x7fbbdbc08ec8> : (13, 31) : bitcast
				i32* : i32* %14<@ 0x7fbbdbc08e60>
			Instruction <@ 0x7fbbdbc08f50> : (13, 31) : store
				<2 x i32> : <2 x i32> %12<@ 0x7fbbdbc08c38>
				<2 x i32>* : <2 x i32>* %15<@ 0x7fbbdbc08ec8>
			Instruction <@ 0x7fbbdbc09000> : (13, 9) : add
				i64 : index.next<@ 0x7fbbdbc08510>
				i64 : i64 4<@ 0x7fbbdbc06220>
			Instruction <@ 0x7fbbdbc09080> : (13, 9) : icmp
				i64 : index.next.1<@ 0x7fbbdbc09000>
				i64 : i64 1000<@ 0x7fbbdbc053c0>
			Instruction <@ 0x7fbbdbc09268> : (13, 9) : br
				i1 : i1 %16<@ 0x7fbbdbc09080>
				label : vector.body<@ 0x7fbbdbc07950>
				label : overflow.checked16<@ 0x7fbbdbc079a0>

		BasicBlock <@ 0x7fbbdbc079a0> : overflow.checked16
			Instruction <@ 0x7fbbdbc093c8> : (0, 0) : insertelement
				<4 x i32> : <4 x i32> <i32 undef, i32 0, i32 0, i32 0><@ 0x7fbbdbc09350>
				i32 : sum<@ 0x7fbbdbc071d0>
				i32 : i32 0<@ 0x7fbbdbc05500>
			Instruction <@ 0x7fbbdbc09438> : (0, 0) : br
				label : vector.body12<@ 0x7fbbdbc091d0>

		BasicBlock <@ 0x7fbbdbc091d0> : vector.body12
			Instruction <@ 0x7fbbdbc09530> : (14, 9) : phi
				i64 : i64 500<@ 0x7fbbdbc09490>
				i64 : index.next22.1<@ 0x7fbbdbc0a5f0>
			Instruction <@ 0x7fbbdbc09680> : (0, 0) : phi
				<4 x i32> : <4 x i32> %17<@ 0x7fbbdbc093c8>
				<4 x i32> : <4 x i32> %28<@ 0x7fbbdbc0a4f0>
			Instruction <@ 0x7fbbdbc09800> : (0, 0) : phi
				<4 x i32> : <4 x i32> zeroinitializer<@ 0x7fbbdbc09750>
				<4 x i32> : <4 x i32> %29<@ 0x7fbbdbc0a570>
			Instruction <@ 0x7fbbdbc09900> : (14, 36) : getelementptr
				i32* : A<@ 0x7fbbdbc07190>
				i64 : index15<@ 0x7fbbdbc09530>
			Instruction <@ 0x7fbbdbc09968> : (14, 36) : bitcast
				i32* : i32* %18<@ 0x7fbbdbc09900>
			Instruction <@ 0x7fbbdbc099e8> : (14, 36) : load
				<4 x i32>* : <4 x i32>* %19<@ 0x7fbbdbc09968>
			Instruction <@ 0x7fbbdbc09ac0> : (14, 36) : add
				i64 : index15<@ 0x7fbbdbc09530>
				i64 : i64 4<@ 0x7fbbdbc06220>
			Instruction <@ 0x7fbbdbc09b60> : (14, 36) : getelementptr
				i32* : A<@ 0x7fbbdbc07190>
				i64 : .sum<@ 0x7fbbdbc09ac0>
			Instruction <@ 0x7fbbdbc09bd8> : (14, 36) : bitcast
				i32* : i32* %20<@ 0x7fbbdbc09b60>
			Instruction <@ 0x7fbbdbc09c58> : (14, 36) : load
				<4 x i32>* : <4 x i32>* %21<@ 0x7fbbdbc09bd8>
			Instruction <@ 0x7fbbdbc08780> : (14, 36) : add
				<4 x i32> : wide.load<@ 0x7fbbdbc099e8>
				<4 x i32> : vec.phi<@ 0x7fbbdbc09680>
			Instruction <@ 0x7fbbdbc08800> : (14, 36) : add
				<4 x i32> : wide.load28<@ 0x7fbbdbc09c58>
				<4 x i32> : vec.phi27<@ 0x7fbbdbc09800>
			Instruction <@ 0x7fbbdbc0a040> : (14, 9) : add
				i64 : index15<@ 0x7fbbdbc09530>
				i64 : i64 8<@ 0x7fbbdbc08860>
			Instruction <@ 0x7fbbdbc0a0c0> : (14, 36) : getelementptr
				i32* : A<@ 0x7fbbdbc07190>
				i64 : index.next22<@ 0x7fbbdbc0a040>
			Instruction <@ 0x7fbbdbc0a128> : (14, 36) : bitcast
				i32* : i32* %24<@ 0x7fbbdbc0a0c0>
			Instruction <@ 0x7fbbdbc0a1a8> : (14, 36) : load
				<4 x i32>* : <4 x i32>* %25<@ 0x7fbbdbc0a128>
			Instruction <@ 0x7fbbdbc0a280> : (14, 36) : add
				i64 : index.next22<@ 0x7fbbdbc0a040>
				i64 : i64 4<@ 0x7fbbdbc06220>
			Instruction <@ 0x7fbbdbc0a320> : (14, 36) : getelementptr
				i32* : A<@ 0x7fbbdbc07190>
				i64 : .sum.1<@ 0x7fbbdbc0a280>
			Instruction <@ 0x7fbbdbc0a398> : (14, 36) : bitcast
				i32* : i32* %26<@ 0x7fbbdbc0a320>
			Instruction <@ 0x7fbbdbc0a418> : (14, 36) : load
				<4 x i32>* : <4 x i32>* %27<@ 0x7fbbdbc0a398>
			Instruction <@ 0x7fbbdbc0a4f0> : (14, 36) : add
				<4 x i32> : wide.load.1<@ 0x7fbbdbc0a1a8>
				<4 x i32> : <4 x i32> %22<@ 0x7fbbdbc08780>
			Instruction <@ 0x7fbbdbc0a570> : (14, 36) : add
				<4 x i32> : wide.load28.1<@ 0x7fbbdbc0a418>
				<4 x i32> : <4 x i32> %23<@ 0x7fbbdbc08800>
			Instruction <@ 0x7fbbdbc0a5f0> : (14, 9) : add
				i64 : index.next22<@ 0x7fbbdbc0a040>
				i64 : i64 8<@ 0x7fbbdbc08860>
			Instruction <@ 0x7fbbdbc0a670> : (14, 9) : icmp
				i64 : index.next22.1<@ 0x7fbbdbc0a5f0>
				i64 : i64 996<@ 0x7fbbdbc094f0>
			Instruction <@ 0x7fbbdbc0a708> : (14, 9) : br
				i1 : i1 %30<@ 0x7fbbdbc0a670>
				label : vector.body12<@ 0x7fbbdbc091d0>
				label : middle.block13<@ 0x7fbbdbc08ad0>

		BasicBlock <@ 0x7fbbdbc08ad0> : middle.block13
			Instruction <@ 0x7fbbdbc0a760> : (0, 0) : phi
				<4 x i32> : <4 x i32> %29<@ 0x7fbbdbc0a570>
			Instruction <@ 0x7fbbdbc0a7f0> : (0, 0) : phi
				<4 x i32> : <4 x i32> %28<@ 0x7fbbdbc0a4f0>
			Instruction <@ 0x7fbbdbc0a8b0> : (14, 36) : add
				<4 x i32> : .lcssa35<@ 0x7fbbdbc0a760>
				<4 x i32> : .lcssa34<@ 0x7fbbdbc0a7f0>
			Instruction <@ 0x7fbbdbc0aab8> : (14, 36) : shufflevector
				<4 x i32> : bin.rdx<@ 0x7fbbdbc0a8b0>
				<4 x i32> : <4 x i32> undef<@ 0x7fbbdbc0a930>
				<4 x i32> : <4 x i32> <i32 2, i32 3, i32 undef, i32 undef><@ 0x7fbbdbc0aa40>
			Instruction <@ 0x7fbbdbc0ab70> : (14, 36) : add
				<4 x i32> : bin.rdx<@ 0x7fbbdbc0a8b0>
				<4 x i32> : rdx.shuf<@ 0x7fbbdbc0aab8>
			Instruction <@ 0x7fbbdbc0ad08> : (14, 36) : shufflevector
				<4 x i32> : bin.rdx30<@ 0x7fbbdbc0ab70>
				<4 x i32> : <4 x i32> undef<@ 0x7fbbdbc0a930>
				<4 x i32> : <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef><@ 0x7fbbdbc0ac90>
			Instruction <@ 0x7fbbdbc0adc0> : (14, 36) : add
				<4 x i32> : bin.rdx30<@ 0x7fbbdbc0ab70>
				<4 x i32> : rdx.shuf31<@ 0x7fbbdbc0ad08>
			Instruction <@ 0x7fbbdbc0ae70> : (14, 36) : extractelement
				<4 x i32> : bin.rdx32<@ 0x7fbbdbc0adc0>
				i32 : i32 0<@ 0x7fbbdbc05500>
			Instruction <@ 0x7fbbdbc0af58> : (14, 36) : br
				label : .preheader<@ 0x7fbbdbc09610>

		BasicBlock <@ 0x7fbbdbc09610> : .preheader
			Instruction <@ 0x7fbbdbc0aff0> : (14, 36) : getelementptr
				i32* : A<@ 0x7fbbdbc07190>
				i64 : i64 996<@ 0x7fbbdbc094f0>
			Instruction <@ 0x7fbbdbc090e8> : (14, 36) : load
				i32* : i32* %32<@ 0x7fbbdbc0aff0>
			Instruction <@ 0x7fbbdbc0b280> : (14, 36) : add
				i32 : i32 %33<@ 0x7fbbdbc090e8>
				i32 : i32 %31<@ 0x7fbbdbc0ae70>
			Instruction <@ 0x7fbbdbc0b3b0> : (12, 23) : call
				metadata : metadata !{i32 %43}<@ 0x7fbbdbc0b2d0>
				i64 : i64 0<@ 0x7fbbdbc04bb0>
				metadata : metadata <badref><@ 0x7fbbdbc0e500>
				void (metadata, i64, metadata)* : llvm.dbg.value<@ 0x7fbbdbc04cb0>
			Instruction <@ 0x7fbbdbc0b4c0> : (14, 36) : getelementptr
				i32* : A<@ 0x7fbbdbc07190>
				i64 : i64 997<@ 0x7fbbdbc0b450>
			Instruction <@ 0x7fbbdbc0b528> : (14, 36) : load
				i32* : i32* %35<@ 0x7fbbdbc0b4c0>
			Instruction <@ 0x7fbbdbc0b5b0> : (14, 36) : add
				i32 : i32 %36<@ 0x7fbbdbc0b528>
				i32 : i32 %34<@ 0x7fbbdbc0b280>
			Instruction <@ 0x7fbbdbc0b6a0> : (12, 23) : call
				metadata : metadata !{i32 %43}<@ 0x7fbbdbc0b2d0>
				i64 : i64 0<@ 0x7fbbdbc04bb0>
				metadata : metadata <badref><@ 0x7fbbdbc0e500>
				void (metadata, i64, metadata)* : llvm.dbg.value<@ 0x7fbbdbc04cb0>
			Instruction <@ 0x7fbbdbc0b7b0> : (14, 36) : getelementptr
				i32* : A<@ 0x7fbbdbc07190>
				i64 : i64 998<@ 0x7fbbdbc0b740>
			Instruction <@ 0x7fbbdbc0b818> : (14, 36) : load
				i32* : i32* %38<@ 0x7fbbdbc0b7b0>
			Instruction <@ 0x7fbbdbc0b8b0> : (14, 36) : add
				i32 : i32 %39<@ 0x7fbbdbc0b818>
				i32 : i32 %37<@ 0x7fbbdbc0b5b0>
			Instruction <@ 0x7fbbdbc0b9a0> : (12, 23) : call
				metadata : metadata !{i32 %43}<@ 0x7fbbdbc0b2d0>
				i64 : i64 0<@ 0x7fbbdbc04bb0>
				metadata : metadata <badref><@ 0x7fbbdbc0e500>
				void (metadata, i64, metadata)* : llvm.dbg.value<@ 0x7fbbdbc04cb0>
			Instruction <@ 0x7fbbdbc0bab0> : (14, 36) : getelementptr
				i32* : A<@ 0x7fbbdbc07190>
				i64 : i64 999<@ 0x7fbbdbc0ba40>
			Instruction <@ 0x7fbbdbc0bb18> : (14, 36) : load
				i32* : i32* %41<@ 0x7fbbdbc0bab0>
			Instruction <@ 0x7fbbdbc0bbb0> : (14, 36) : add
				i32 : i32 %42<@ 0x7fbbdbc0bb18>
				i32 : i32 %40<@ 0x7fbbdbc0b8b0>
			Instruction <@ 0x7fbbdbc0bc60> : (12, 23) : call
				metadata : metadata !{i32 %43}<@ 0x7fbbdbc0b2d0>
				i64 : i64 0<@ 0x7fbbdbc04bb0>
				metadata : metadata <badref><@ 0x7fbbdbc0e500>
				void (metadata, i64, metadata)* : llvm.dbg.value<@ 0x7fbbdbc04cb0>
			Instruction <@ 0x7fbbdbc0bcd8> : (15, 5) : ret
				i32 : i32 %43<@ 0x7fbbdbc0bbb0>

	Function <@ 0x7fbbdbc04cb0> : llvm.dbg.value : Declaration : Intrinsic
		ArgList :
			metadata %0<@ 0x7fbbdbc0b0b0>
			i64 %1<@ 0x7fbbdbc0b0f0>
			metadata %2<@ 0x7fbbdbc0b130>
